---
const { kits, activeKitIndex } = Astro.props;
---

<div class="carousel-container" data-activeKitIndex={activeKitIndex}>
  <div class="carousel-slide">
    {
      kits.map((item) => {
        return <img src={item.imageSrc} class="image-kits" />;
      })
    }
  </div>
  <div class="carousel-dots"></div>
</div>

<style is:inline>
  .carousel-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    max-width: 500px;
  }

  .carousel-slide {
    display: flex;
    transition: transform 0.3s ease-in-out;
  }

  .carousel-slide img {
    width: 100%;
    border-radius: 0.5rem;
  }

  .carousel-dots {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .carousel-dot {
    display: inline-block;
    width: 10px;
    height: 10px;
    background-color: #888;
    border-radius: 50%;
    cursor: pointer;
  }

  .carousel-dot.active {
    width: 11px;
    height: 11px;
    background-color: #333;
  }
</style>

<script>
  const slideContainer = document.querySelector(".carousel-slide");
  const slides = document.querySelectorAll(".carousel-slide img");
  const dotContainer = document.querySelector(".carousel-dots");

  let slideIndex = 0;

  slides.forEach((_, index) => {
    const dot = document.createElement("div");
    dot.classList.add("carousel-dot");
    dot.addEventListener("click", () => goToSlide(index));
    dotContainer.appendChild(dot);
  });

  const dots = document.querySelectorAll(".carousel-dot");

  showSlide();

  function showSlide() {
    slideContainer.style.transform = `translateX(-${slideIndex * 100}%)`;
    dots.forEach((dot, index) => {
      dot.classList.toggle("active", index === slideIndex);
    });
  }

  function goToSlide(index) {
    if (index >= 0 && index < slides.length) {
      slideIndex = index;
      showSlide();
    }
  }
</script>
