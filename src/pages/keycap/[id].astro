---
import Layout from "../../layouts/Layout.astro";
import PriceTable from "../../components/PriceTable.astro";
import { data } from "../../../public/data";

const { id } = Astro.params;
const response = data.filter((item) => {
  return id === item.id;
});
---

<Layout title="Keycap demo">
  <section>
    <div class="keycap-info-container">
      <div class="keycap-image-info-container">
        <img src={response[0].attributes.imageSrc} alt="" class="image-info" />
      </div>
      <main class="keycap-main-info-container">
        <div>
          <h2 class="keycap-header-two">{response[0].attributes.title}</h2>
          <p class="designed-container">
            Designed by: {response[0].attributes.designer}
          </p>
        </div>
        <p class="keycap-description">{response[0].attributes.description}</p>
        <div>
          <h3 class="keycap-header-three">Kits</h3>
          <div class="kits-button-container">
            {
              response[0].attributes.kits.map((item) => {
                return <button class="kits-button">{item.name}</button>;
              })
            }
          </div>
        </div>
        <div>
          <h3 class="keycap-header-three">Pricing</h3>
          {
            Object.keys(response[0].attributes.kits[0].price).length !== 0 ? (
              <PriceTable kits={response[0].attributes.kits} />
            ) : (
              <p class="text-regular">No pricing available.</p>
            )
          }
        </div>
        <div class="reference-container">
          <p>Reference:</p>
          <a href={response[0].attributes.groupBuyLink} class="reference-link"
            >Link</a
          >
        </div>
      </main>
    </div>
  </section>
  <style>
    .keycap-header-two {
      font-size: 2rem;
    }
    .keycap-header-three {
      padding-bottom: 0.5rem;
    }
    .keycap-info-container {
      display: grid;
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    .keycap-main-info-container {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .designed-container {
      font-size: 1rem;
    }
    .reference-container {
      display: flex;
      font-size: 1rem;
      gap: 0.25rem;
    }
    .reference-link {
      color: blue;
      /* text-decoration: underline; */
    }

    .keycap-description {
      font-size: 1rem;
    }

    .text-regular {
      font-size: 1rem;
    }
    .kits-button-container {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    .kits-button {
      padding: 5px 10px 5px 10px;
      border: 1px solid black;
      outline: none;
      background-color: white;
      cursor: pointer;
    }

    .image-info {
      border-radius: 0.5rem;
      height: auto;
      width: 100%;
      max-width: 500px;
    }
    @media (min-width: 640px) {
    }

    @media (min-width: 768px) {
      .keycap-info-container {
        grid-template-columns: 1fr 1fr;
      }

      .keycap-info-container > div:first-child {
        order: 2;
      }
    }
  </style>
</Layout>
